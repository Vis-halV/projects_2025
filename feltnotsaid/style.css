/*! tailwindcss v4.1.10 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap');
@layer properties;
.fixed {
  position: fixed;
}
.z-50 {
  z-index: 50;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.mt-auto {
  margin-top: auto;
}
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.min-h-screen {
  min-height: 100vh;
}
.w-full {
  width: 100%;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.text-center {
  text-align: center;
}
.text-balance {
  text-wrap: balance;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
@layer base {
  :root {
    --background: hsla(0, 0%, 100%, 1);
    --foreground: hsla(0, 0%, 9%, 1);
    --border: hsla(0, 0%, 89%, 1);
    --accent: hsla(0, 0%, 4%, 1);
    --accent-foreground: hsla(0, 0%, 98%, 1);
    --radius: 0.5rem;
  }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: 'Inter', sans-serif;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
  ::-webkit-scrollbar {
    display: none;
  }
  .font-inter {
    font-family: 'Inter', sans-serif;
  }
  .font-playfair {
    font-family: 'Playfair Display', serif;
  }
}
@layer components {
  .fade-in {
    animation: fadeIn 0.6s ease-out forwards;
    opacity: 0;
  }
  .fade-in-delay {
    animation: fadeIn 0.8s ease-out 0.2s forwards;
    opacity: 0;
  }
  .hover-lift {
    transition: transform 0.2s ease-out;
  }
  .hover-lift:hover {
    transform: translateY(-2px);
  }
}
@layer utilities {
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }
  .text-accent {
    color: hsl(var(--accent));
  }
  .text-accent-foreground {
    color: hsl(var(--accent-foreground));
  }
  .bg-muted {
    background-color: hsl(var(--muted));
  }
  .bg-background {
    background-color: hsl(var(--background));
  }
  .text-foreground {
    color: hsl(var(--foreground));
  }
  .border-border {
    border-color: hsl(var(--border));
  }
  .bg-accent {
    background-color: hsl(var(--accent));
  }
  .bg-accent-foreground {
    background-color: hsl(var(--accent-foreground));
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-duration: initial;
    }
  }
}
